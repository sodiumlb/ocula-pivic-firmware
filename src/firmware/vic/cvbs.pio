/*
 * Copyright (c) 2025 Sodiumlightbaby
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

; Composite video synthesizer
; Assumes 5 bit DAC output
; Running frequency needs to be a multiple of the colour burst frequency and
; with enough over-sampling to implement the phase shifts needed
; PAL timing:  clk_sys=133.0MHz colour burst=clk_sys/30=4.433333MHz
; Commands auto pulled from the fifo
;  26                              0 
; |post-delay|L1|Repeat|L0|Pre-delay|
;      4       5    9    5    4      bits
; DC,L0,L1 are DAC levels to output
; Assuming square wave output - L0 and L1 are asserted for half periods each
; Set both to same level to represents a DC level
; Currently repeat loop tuned for 30 cycle period
; Repeat is exact so 0 equals 1 periods, 1 equals 2 periods etc
.program cvbs

; autopull required
    out x 4             ;get delay value (for phase change)
.wrap_target
 predelay:
    jmp x-- predelay
    ; first cycle has value extraction integrated
    mov pins osr        ;L0 out
    out x 5        [ 8] ;Keep L0 in x
    out y 9             ;Keep repeat in y
    out isr 5           ;Keep L1 in isr
    jmp !y bypass       ;Bypass repeat if zero
    jmp y-- first  [ 1] ;Decrement y (always taken), balance branches
    ; repeat loop
repeat:
    nop            [ 1]
first:
    mov pins isr   [14] ;L1 out
    mov pins x          ;L0 out
    jmp y-- repeat [11]
    ;last cycle has value extraction integrated
bypass:
    out y 4             ;get post delay <- autopull after here
    out x 4             ;get next pre-delay
    mov pins isr        ;L1 out
postdelay:
    jmp y-- postdelay
.wrap

;Dot clock generation
;Faking 38.5 period with 38+39 pair
.program cvbs_dotclk
.wrap_target
    irq set 1 [29]
    nop       [ 7]
    irq set 1 [29]
    nop       [ 8]
.wrap

.program cvbs_ntsc
.origin 0
public entry:
    out pc 5

public cvbs_cmd_dc_run:
    out pins 5          ;DC level out
    out y 15
dc_loop:
    wait 1 irq 1        ;Wait for dotclock
    jmp y-- dc_loop
    out pc 5

public cvbs_cmd_pixel_run:
    out y 20           ;Repeat count
pixel:
    wait 1 irq 1       ;Wait for dotclk
    out pins 5         ;Out L0
    out x 5
delay0:
    jmp x-- delay0
    out pins 5         ;Out L1
    out x 5
delay1:
    jmp x-- delay1
    out x 5            ;Out L2
    jmp y-- pixel
    out pc 5

public cvbs_cmd_burst:
    out y 5            ;repeat count
    out x 5            ;get predelay
    out isr 5          ;keep L0 in isr
    wait 1 irq 1       ;sync to dotclock only at the start
predelay_burst:
    jmp x-- predelay_burst
burst_loop:
    mov pins isr  [21] ;L0 out
    mov pins osr  [20] ;L1 out
    jmp y-- burst_loop
    out null 5         ;Dump L1, trigger autopull
    out pc 5